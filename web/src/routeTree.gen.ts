/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as DashboardLayoutRouteImport } from './app/dashboard/layout'
import { Route as nondashboardLayoutRouteImport } from './app/(nondashboard)/layout'
import { Route as authLayoutRouteImport } from './app/(auth)/layout'
import { Route as PageRouteImport } from './app/page'
import { Route as DashboardTenantLayoutRouteImport } from './app/dashboard/tenant/layout'
import { Route as DashboardManagerLayoutRouteImport } from './app/dashboard/manager/layout'
import { Route as nondashboardSearchPageRouteImport } from './app/(nondashboard)/search/page'
import { Route as nondashboardMapPageRouteImport } from './app/(nondashboard)/map/page'
import { Route as nondashboardLandingPageRouteImport } from './app/(nondashboard)/landing/page'
import { Route as authRegisterTenantPageRouteImport } from './app/(auth)/register/tenant/page'
import { Route as authRegisterManagerPageRouteImport } from './app/(auth)/register/manager/page'
import { Route as authLoginTenantPageRouteImport } from './app/(auth)/login/tenant/page'
import { Route as authLoginManagerPageRouteImport } from './app/(auth)/login/manager/page'
import { Route as DashboardTenantsectionsSettingsPageRouteImport } from './app/dashboard/tenant/(sections)/settings/page'
import { Route as DashboardTenantsectionsResidencesPageRouteImport } from './app/dashboard/tenant/(sections)/residences/page'
import { Route as DashboardTenantsectionsFavouritesPageRouteImport } from './app/dashboard/tenant/(sections)/favourites/page'
import { Route as DashboardTenantsectionsApplicationsPageRouteImport } from './app/dashboard/tenant/(sections)/applications/page'
import { Route as DashboardTenantsectionsindexPageRouteImport } from './app/dashboard/tenant/(sections)/(index)/page'
import { Route as DashboardManagersectionsManagedPropertiesPageRouteImport } from './app/dashboard/manager/(sections)/managed-properties/page'
import { Route as DashboardManagersectionsCreatePropertyPageRouteImport } from './app/dashboard/manager/(sections)/create-property/page'
import { Route as DashboardManagersectionsindexPageRouteImport } from './app/dashboard/manager/(sections)/(index)/page'
import { Route as DashboardTenantsectionsResidencesIdRouteImport } from './app/dashboard/tenant/(sections)/residences/$id'
import { Route as DashboardTenantsectionsFavouritesIdRouteImport } from './app/dashboard/tenant/(sections)/favourites/$id'
import { Route as DashboardTenantsectionsApplicationsIdRouteImport } from './app/dashboard/tenant/(sections)/applications/$id'
import { Route as DashboardManagersectionsManagedPropertiesIdRouteImport } from './app/dashboard/manager/(sections)/managed-properties/$id'

const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const nondashboardLayoutRoute = nondashboardLayoutRouteImport.update({
  id: '/(nondashboard)',
  getParentRoute: () => rootRouteImport,
} as any)
const authLayoutRoute = authLayoutRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const PageRoute = PageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardTenantLayoutRoute = DashboardTenantLayoutRouteImport.update({
  id: '/tenant',
  path: '/tenant',
  getParentRoute: () => DashboardLayoutRoute,
} as any)
const DashboardManagerLayoutRoute = DashboardManagerLayoutRouteImport.update({
  id: '/manager',
  path: '/manager',
  getParentRoute: () => DashboardLayoutRoute,
} as any)
const nondashboardSearchPageRoute = nondashboardSearchPageRouteImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => nondashboardLayoutRoute,
} as any)
const nondashboardMapPageRoute = nondashboardMapPageRouteImport.update({
  id: '/map/',
  path: '/map/',
  getParentRoute: () => nondashboardLayoutRoute,
} as any)
const nondashboardLandingPageRoute = nondashboardLandingPageRouteImport.update({
  id: '/landing/',
  path: '/landing/',
  getParentRoute: () => nondashboardLayoutRoute,
} as any)
const authRegisterTenantPageRoute = authRegisterTenantPageRouteImport.update({
  id: '/register/tenant/',
  path: '/register/tenant/',
  getParentRoute: () => authLayoutRoute,
} as any)
const authRegisterManagerPageRoute = authRegisterManagerPageRouteImport.update({
  id: '/register/manager/',
  path: '/register/manager/',
  getParentRoute: () => authLayoutRoute,
} as any)
const authLoginTenantPageRoute = authLoginTenantPageRouteImport.update({
  id: '/login/tenant/',
  path: '/login/tenant/',
  getParentRoute: () => authLayoutRoute,
} as any)
const authLoginManagerPageRoute = authLoginManagerPageRouteImport.update({
  id: '/login/manager/',
  path: '/login/manager/',
  getParentRoute: () => authLayoutRoute,
} as any)
const DashboardTenantsectionsSettingsPageRoute =
  DashboardTenantsectionsSettingsPageRouteImport.update({
    id: '/(sections)/settings/',
    path: '/settings/',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsResidencesPageRoute =
  DashboardTenantsectionsResidencesPageRouteImport.update({
    id: '/(sections)/residences/',
    path: '/residences/',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsFavouritesPageRoute =
  DashboardTenantsectionsFavouritesPageRouteImport.update({
    id: '/(sections)/favourites/',
    path: '/favourites/',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsApplicationsPageRoute =
  DashboardTenantsectionsApplicationsPageRouteImport.update({
    id: '/(sections)/applications/',
    path: '/applications/',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsindexPageRoute =
  DashboardTenantsectionsindexPageRouteImport.update({
    id: '/(sections)/(index)/',
    path: '/',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardManagersectionsManagedPropertiesPageRoute =
  DashboardManagersectionsManagedPropertiesPageRouteImport.update({
    id: '/(sections)/managed-properties/',
    path: '/managed-properties/',
    getParentRoute: () => DashboardManagerLayoutRoute,
  } as any)
const DashboardManagersectionsCreatePropertyPageRoute =
  DashboardManagersectionsCreatePropertyPageRouteImport.update({
    id: '/(sections)/create-property/',
    path: '/create-property/',
    getParentRoute: () => DashboardManagerLayoutRoute,
  } as any)
const DashboardManagersectionsindexPageRoute =
  DashboardManagersectionsindexPageRouteImport.update({
    id: '/(sections)/(index)/',
    path: '/',
    getParentRoute: () => DashboardManagerLayoutRoute,
  } as any)
const DashboardTenantsectionsResidencesIdRoute =
  DashboardTenantsectionsResidencesIdRouteImport.update({
    id: '/(sections)/residences/$id',
    path: '/residences/$id',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsFavouritesIdRoute =
  DashboardTenantsectionsFavouritesIdRouteImport.update({
    id: '/(sections)/favourites/$id',
    path: '/favourites/$id',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardTenantsectionsApplicationsIdRoute =
  DashboardTenantsectionsApplicationsIdRouteImport.update({
    id: '/(sections)/applications/$id',
    path: '/applications/$id',
    getParentRoute: () => DashboardTenantLayoutRoute,
  } as any)
const DashboardManagersectionsManagedPropertiesIdRoute =
  DashboardManagersectionsManagedPropertiesIdRouteImport.update({
    id: '/(sections)/managed-properties/$id',
    path: '/managed-properties/$id',
    getParentRoute: () => DashboardManagerLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof nondashboardLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/dashboard/manager': typeof DashboardManagerLayoutRouteWithChildren
  '/dashboard/tenant': typeof DashboardTenantLayoutRouteWithChildren
  '/landing': typeof nondashboardLandingPageRoute
  '/map': typeof nondashboardMapPageRoute
  '/search': typeof nondashboardSearchPageRoute
  '/login/manager': typeof authLoginManagerPageRoute
  '/login/tenant': typeof authLoginTenantPageRoute
  '/register/manager': typeof authRegisterManagerPageRoute
  '/register/tenant': typeof authRegisterTenantPageRoute
  '/dashboard/manager/managed-properties/$id': typeof DashboardManagersectionsManagedPropertiesIdRoute
  '/dashboard/tenant/applications/$id': typeof DashboardTenantsectionsApplicationsIdRoute
  '/dashboard/tenant/favourites/$id': typeof DashboardTenantsectionsFavouritesIdRoute
  '/dashboard/tenant/residences/$id': typeof DashboardTenantsectionsResidencesIdRoute
  '/dashboard/manager/': typeof DashboardManagersectionsindexPageRoute
  '/dashboard/manager/create-property': typeof DashboardManagersectionsCreatePropertyPageRoute
  '/dashboard/manager/managed-properties': typeof DashboardManagersectionsManagedPropertiesPageRoute
  '/dashboard/tenant/': typeof DashboardTenantsectionsindexPageRoute
  '/dashboard/tenant/applications': typeof DashboardTenantsectionsApplicationsPageRoute
  '/dashboard/tenant/favourites': typeof DashboardTenantsectionsFavouritesPageRoute
  '/dashboard/tenant/residences': typeof DashboardTenantsectionsResidencesPageRoute
  '/dashboard/tenant/settings': typeof DashboardTenantsectionsSettingsPageRoute
}
export interface FileRoutesByTo {
  '/': typeof nondashboardLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/landing': typeof nondashboardLandingPageRoute
  '/map': typeof nondashboardMapPageRoute
  '/search': typeof nondashboardSearchPageRoute
  '/login/manager': typeof authLoginManagerPageRoute
  '/login/tenant': typeof authLoginTenantPageRoute
  '/register/manager': typeof authRegisterManagerPageRoute
  '/register/tenant': typeof authRegisterTenantPageRoute
  '/dashboard/manager/managed-properties/$id': typeof DashboardManagersectionsManagedPropertiesIdRoute
  '/dashboard/tenant/applications/$id': typeof DashboardTenantsectionsApplicationsIdRoute
  '/dashboard/tenant/favourites/$id': typeof DashboardTenantsectionsFavouritesIdRoute
  '/dashboard/tenant/residences/$id': typeof DashboardTenantsectionsResidencesIdRoute
  '/dashboard/manager': typeof DashboardManagersectionsindexPageRoute
  '/dashboard/manager/create-property': typeof DashboardManagersectionsCreatePropertyPageRoute
  '/dashboard/manager/managed-properties': typeof DashboardManagersectionsManagedPropertiesPageRoute
  '/dashboard/tenant': typeof DashboardTenantsectionsindexPageRoute
  '/dashboard/tenant/applications': typeof DashboardTenantsectionsApplicationsPageRoute
  '/dashboard/tenant/favourites': typeof DashboardTenantsectionsFavouritesPageRoute
  '/dashboard/tenant/residences': typeof DashboardTenantsectionsResidencesPageRoute
  '/dashboard/tenant/settings': typeof DashboardTenantsectionsSettingsPageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof PageRoute
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(nondashboard)': typeof nondashboardLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/dashboard/manager': typeof DashboardManagerLayoutRouteWithChildren
  '/dashboard/tenant': typeof DashboardTenantLayoutRouteWithChildren
  '/(nondashboard)/landing/': typeof nondashboardLandingPageRoute
  '/(nondashboard)/map/': typeof nondashboardMapPageRoute
  '/(nondashboard)/search/': typeof nondashboardSearchPageRoute
  '/(auth)/login/manager/': typeof authLoginManagerPageRoute
  '/(auth)/login/tenant/': typeof authLoginTenantPageRoute
  '/(auth)/register/manager/': typeof authRegisterManagerPageRoute
  '/(auth)/register/tenant/': typeof authRegisterTenantPageRoute
  '/dashboard/manager/(sections)/managed-properties/$id': typeof DashboardManagersectionsManagedPropertiesIdRoute
  '/dashboard/tenant/(sections)/applications/$id': typeof DashboardTenantsectionsApplicationsIdRoute
  '/dashboard/tenant/(sections)/favourites/$id': typeof DashboardTenantsectionsFavouritesIdRoute
  '/dashboard/tenant/(sections)/residences/$id': typeof DashboardTenantsectionsResidencesIdRoute
  '/dashboard/manager/(sections)/(index)/': typeof DashboardManagersectionsindexPageRoute
  '/dashboard/manager/(sections)/create-property/': typeof DashboardManagersectionsCreatePropertyPageRoute
  '/dashboard/manager/(sections)/managed-properties/': typeof DashboardManagersectionsManagedPropertiesPageRoute
  '/dashboard/tenant/(sections)/(index)/': typeof DashboardTenantsectionsindexPageRoute
  '/dashboard/tenant/(sections)/applications/': typeof DashboardTenantsectionsApplicationsPageRoute
  '/dashboard/tenant/(sections)/favourites/': typeof DashboardTenantsectionsFavouritesPageRoute
  '/dashboard/tenant/(sections)/residences/': typeof DashboardTenantsectionsResidencesPageRoute
  '/dashboard/tenant/(sections)/settings/': typeof DashboardTenantsectionsSettingsPageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/manager'
    | '/dashboard/tenant'
    | '/landing'
    | '/map'
    | '/search'
    | '/login/manager'
    | '/login/tenant'
    | '/register/manager'
    | '/register/tenant'
    | '/dashboard/manager/managed-properties/$id'
    | '/dashboard/tenant/applications/$id'
    | '/dashboard/tenant/favourites/$id'
    | '/dashboard/tenant/residences/$id'
    | '/dashboard/manager/'
    | '/dashboard/manager/create-property'
    | '/dashboard/manager/managed-properties'
    | '/dashboard/tenant/'
    | '/dashboard/tenant/applications'
    | '/dashboard/tenant/favourites'
    | '/dashboard/tenant/residences'
    | '/dashboard/tenant/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/landing'
    | '/map'
    | '/search'
    | '/login/manager'
    | '/login/tenant'
    | '/register/manager'
    | '/register/tenant'
    | '/dashboard/manager/managed-properties/$id'
    | '/dashboard/tenant/applications/$id'
    | '/dashboard/tenant/favourites/$id'
    | '/dashboard/tenant/residences/$id'
    | '/dashboard/manager'
    | '/dashboard/manager/create-property'
    | '/dashboard/manager/managed-properties'
    | '/dashboard/tenant'
    | '/dashboard/tenant/applications'
    | '/dashboard/tenant/favourites'
    | '/dashboard/tenant/residences'
    | '/dashboard/tenant/settings'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(nondashboard)'
    | '/dashboard'
    | '/dashboard/manager'
    | '/dashboard/tenant'
    | '/(nondashboard)/landing/'
    | '/(nondashboard)/map/'
    | '/(nondashboard)/search/'
    | '/(auth)/login/manager/'
    | '/(auth)/login/tenant/'
    | '/(auth)/register/manager/'
    | '/(auth)/register/tenant/'
    | '/dashboard/manager/(sections)/managed-properties/$id'
    | '/dashboard/tenant/(sections)/applications/$id'
    | '/dashboard/tenant/(sections)/favourites/$id'
    | '/dashboard/tenant/(sections)/residences/$id'
    | '/dashboard/manager/(sections)/(index)/'
    | '/dashboard/manager/(sections)/create-property/'
    | '/dashboard/manager/(sections)/managed-properties/'
    | '/dashboard/tenant/(sections)/(index)/'
    | '/dashboard/tenant/(sections)/applications/'
    | '/dashboard/tenant/(sections)/favourites/'
    | '/dashboard/tenant/(sections)/residences/'
    | '/dashboard/tenant/(sections)/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PageRoute: typeof PageRoute
  authLayoutRoute: typeof authLayoutRouteWithChildren
  nondashboardLayoutRoute: typeof nondashboardLayoutRouteWithChildren
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(nondashboard)': {
      id: '/(nondashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof nondashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/tenant': {
      id: '/dashboard/tenant'
      path: '/tenant'
      fullPath: '/dashboard/tenant'
      preLoaderRoute: typeof DashboardTenantLayoutRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/dashboard/manager': {
      id: '/dashboard/manager'
      path: '/manager'
      fullPath: '/dashboard/manager'
      preLoaderRoute: typeof DashboardManagerLayoutRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/(nondashboard)/search/': {
      id: '/(nondashboard)/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof nondashboardSearchPageRouteImport
      parentRoute: typeof nondashboardLayoutRoute
    }
    '/(nondashboard)/map/': {
      id: '/(nondashboard)/map/'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof nondashboardMapPageRouteImport
      parentRoute: typeof nondashboardLayoutRoute
    }
    '/(nondashboard)/landing/': {
      id: '/(nondashboard)/landing/'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof nondashboardLandingPageRouteImport
      parentRoute: typeof nondashboardLayoutRoute
    }
    '/(auth)/register/tenant/': {
      id: '/(auth)/register/tenant/'
      path: '/register/tenant'
      fullPath: '/register/tenant'
      preLoaderRoute: typeof authRegisterTenantPageRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/register/manager/': {
      id: '/(auth)/register/manager/'
      path: '/register/manager'
      fullPath: '/register/manager'
      preLoaderRoute: typeof authRegisterManagerPageRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/login/tenant/': {
      id: '/(auth)/login/tenant/'
      path: '/login/tenant'
      fullPath: '/login/tenant'
      preLoaderRoute: typeof authLoginTenantPageRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/login/manager/': {
      id: '/(auth)/login/manager/'
      path: '/login/manager'
      fullPath: '/login/manager'
      preLoaderRoute: typeof authLoginManagerPageRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/dashboard/tenant/(sections)/settings/': {
      id: '/dashboard/tenant/(sections)/settings/'
      path: '/settings'
      fullPath: '/dashboard/tenant/settings'
      preLoaderRoute: typeof DashboardTenantsectionsSettingsPageRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/residences/': {
      id: '/dashboard/tenant/(sections)/residences/'
      path: '/residences'
      fullPath: '/dashboard/tenant/residences'
      preLoaderRoute: typeof DashboardTenantsectionsResidencesPageRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/favourites/': {
      id: '/dashboard/tenant/(sections)/favourites/'
      path: '/favourites'
      fullPath: '/dashboard/tenant/favourites'
      preLoaderRoute: typeof DashboardTenantsectionsFavouritesPageRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/applications/': {
      id: '/dashboard/tenant/(sections)/applications/'
      path: '/applications'
      fullPath: '/dashboard/tenant/applications'
      preLoaderRoute: typeof DashboardTenantsectionsApplicationsPageRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/(index)/': {
      id: '/dashboard/tenant/(sections)/(index)/'
      path: '/'
      fullPath: '/dashboard/tenant/'
      preLoaderRoute: typeof DashboardTenantsectionsindexPageRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/manager/(sections)/managed-properties/': {
      id: '/dashboard/manager/(sections)/managed-properties/'
      path: '/managed-properties'
      fullPath: '/dashboard/manager/managed-properties'
      preLoaderRoute: typeof DashboardManagersectionsManagedPropertiesPageRouteImport
      parentRoute: typeof DashboardManagerLayoutRoute
    }
    '/dashboard/manager/(sections)/create-property/': {
      id: '/dashboard/manager/(sections)/create-property/'
      path: '/create-property'
      fullPath: '/dashboard/manager/create-property'
      preLoaderRoute: typeof DashboardManagersectionsCreatePropertyPageRouteImport
      parentRoute: typeof DashboardManagerLayoutRoute
    }
    '/dashboard/manager/(sections)/(index)/': {
      id: '/dashboard/manager/(sections)/(index)/'
      path: '/'
      fullPath: '/dashboard/manager/'
      preLoaderRoute: typeof DashboardManagersectionsindexPageRouteImport
      parentRoute: typeof DashboardManagerLayoutRoute
    }
    '/dashboard/tenant/(sections)/residences/$id': {
      id: '/dashboard/tenant/(sections)/residences/$id'
      path: '/residences/$id'
      fullPath: '/dashboard/tenant/residences/$id'
      preLoaderRoute: typeof DashboardTenantsectionsResidencesIdRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/favourites/$id': {
      id: '/dashboard/tenant/(sections)/favourites/$id'
      path: '/favourites/$id'
      fullPath: '/dashboard/tenant/favourites/$id'
      preLoaderRoute: typeof DashboardTenantsectionsFavouritesIdRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/tenant/(sections)/applications/$id': {
      id: '/dashboard/tenant/(sections)/applications/$id'
      path: '/applications/$id'
      fullPath: '/dashboard/tenant/applications/$id'
      preLoaderRoute: typeof DashboardTenantsectionsApplicationsIdRouteImport
      parentRoute: typeof DashboardTenantLayoutRoute
    }
    '/dashboard/manager/(sections)/managed-properties/$id': {
      id: '/dashboard/manager/(sections)/managed-properties/$id'
      path: '/managed-properties/$id'
      fullPath: '/dashboard/manager/managed-properties/$id'
      preLoaderRoute: typeof DashboardManagersectionsManagedPropertiesIdRouteImport
      parentRoute: typeof DashboardManagerLayoutRoute
    }
  }
}

interface authLayoutRouteChildren {
  authLoginManagerPageRoute: typeof authLoginManagerPageRoute
  authLoginTenantPageRoute: typeof authLoginTenantPageRoute
  authRegisterManagerPageRoute: typeof authRegisterManagerPageRoute
  authRegisterTenantPageRoute: typeof authRegisterTenantPageRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLoginManagerPageRoute: authLoginManagerPageRoute,
  authLoginTenantPageRoute: authLoginTenantPageRoute,
  authRegisterManagerPageRoute: authRegisterManagerPageRoute,
  authRegisterTenantPageRoute: authRegisterTenantPageRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface nondashboardLayoutRouteChildren {
  nondashboardLandingPageRoute: typeof nondashboardLandingPageRoute
  nondashboardMapPageRoute: typeof nondashboardMapPageRoute
  nondashboardSearchPageRoute: typeof nondashboardSearchPageRoute
}

const nondashboardLayoutRouteChildren: nondashboardLayoutRouteChildren = {
  nondashboardLandingPageRoute: nondashboardLandingPageRoute,
  nondashboardMapPageRoute: nondashboardMapPageRoute,
  nondashboardSearchPageRoute: nondashboardSearchPageRoute,
}

const nondashboardLayoutRouteWithChildren =
  nondashboardLayoutRoute._addFileChildren(nondashboardLayoutRouteChildren)

interface DashboardManagerLayoutRouteChildren {
  DashboardManagersectionsManagedPropertiesIdRoute: typeof DashboardManagersectionsManagedPropertiesIdRoute
  DashboardManagersectionsindexPageRoute: typeof DashboardManagersectionsindexPageRoute
  DashboardManagersectionsCreatePropertyPageRoute: typeof DashboardManagersectionsCreatePropertyPageRoute
  DashboardManagersectionsManagedPropertiesPageRoute: typeof DashboardManagersectionsManagedPropertiesPageRoute
}

const DashboardManagerLayoutRouteChildren: DashboardManagerLayoutRouteChildren =
  {
    DashboardManagersectionsManagedPropertiesIdRoute:
      DashboardManagersectionsManagedPropertiesIdRoute,
    DashboardManagersectionsindexPageRoute:
      DashboardManagersectionsindexPageRoute,
    DashboardManagersectionsCreatePropertyPageRoute:
      DashboardManagersectionsCreatePropertyPageRoute,
    DashboardManagersectionsManagedPropertiesPageRoute:
      DashboardManagersectionsManagedPropertiesPageRoute,
  }

const DashboardManagerLayoutRouteWithChildren =
  DashboardManagerLayoutRoute._addFileChildren(
    DashboardManagerLayoutRouteChildren,
  )

interface DashboardTenantLayoutRouteChildren {
  DashboardTenantsectionsApplicationsIdRoute: typeof DashboardTenantsectionsApplicationsIdRoute
  DashboardTenantsectionsFavouritesIdRoute: typeof DashboardTenantsectionsFavouritesIdRoute
  DashboardTenantsectionsResidencesIdRoute: typeof DashboardTenantsectionsResidencesIdRoute
  DashboardTenantsectionsindexPageRoute: typeof DashboardTenantsectionsindexPageRoute
  DashboardTenantsectionsApplicationsPageRoute: typeof DashboardTenantsectionsApplicationsPageRoute
  DashboardTenantsectionsFavouritesPageRoute: typeof DashboardTenantsectionsFavouritesPageRoute
  DashboardTenantsectionsResidencesPageRoute: typeof DashboardTenantsectionsResidencesPageRoute
  DashboardTenantsectionsSettingsPageRoute: typeof DashboardTenantsectionsSettingsPageRoute
}

const DashboardTenantLayoutRouteChildren: DashboardTenantLayoutRouteChildren = {
  DashboardTenantsectionsApplicationsIdRoute:
    DashboardTenantsectionsApplicationsIdRoute,
  DashboardTenantsectionsFavouritesIdRoute:
    DashboardTenantsectionsFavouritesIdRoute,
  DashboardTenantsectionsResidencesIdRoute:
    DashboardTenantsectionsResidencesIdRoute,
  DashboardTenantsectionsindexPageRoute: DashboardTenantsectionsindexPageRoute,
  DashboardTenantsectionsApplicationsPageRoute:
    DashboardTenantsectionsApplicationsPageRoute,
  DashboardTenantsectionsFavouritesPageRoute:
    DashboardTenantsectionsFavouritesPageRoute,
  DashboardTenantsectionsResidencesPageRoute:
    DashboardTenantsectionsResidencesPageRoute,
  DashboardTenantsectionsSettingsPageRoute:
    DashboardTenantsectionsSettingsPageRoute,
}

const DashboardTenantLayoutRouteWithChildren =
  DashboardTenantLayoutRoute._addFileChildren(
    DashboardTenantLayoutRouteChildren,
  )

interface DashboardLayoutRouteChildren {
  DashboardManagerLayoutRoute: typeof DashboardManagerLayoutRouteWithChildren
  DashboardTenantLayoutRoute: typeof DashboardTenantLayoutRouteWithChildren
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardManagerLayoutRoute: DashboardManagerLayoutRouteWithChildren,
  DashboardTenantLayoutRoute: DashboardTenantLayoutRouteWithChildren,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PageRoute: PageRoute,
  authLayoutRoute: authLayoutRouteWithChildren,
  nondashboardLayoutRoute: nondashboardLayoutRouteWithChildren,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
